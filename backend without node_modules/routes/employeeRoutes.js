// routes/employeeRoutes.js
const express = require('express');
const Employee = require('../models/Employee');
const Payroll = require('../models/Payroll');
const router = express.Router();

// Create a new employee
router.post('/employees', async (req, res) => {
  try {
    const employee = new Employee(req.body);
    await employee.save();
    res.status(201).json(employee);
  } catch (error) {
    res.status(500).json({ message: 'Error creating employee', error: error.message });
  }
});

// Get all employees
router.get('/employees', async (req, res) => {
  try {
    const employees = await Employee.find();
    res.status(200).json(employees);
  } catch (error) {
    res.status(500).json({ message: 'Error retrieving employees', error: error.message });
  }
});

// Update an employee by ID
router.put('/employees/:id', async (req, res) => {
  try {
    const employee = await Employee.findOneAndUpdate({ id: req.params.id }, req.body, { new: true });
    if (!employee) return res.status(404).json({ message: 'Employee not found' });
    res.status(200).json(employee);
  } catch (error) {
    res.status(500).json({ message: 'Error updating employee', error: error.message });
  }
});

// Delete an employee by ID
router.delete('/employees/:id', async (req, res) => {
  try {
    const employee = await Employee.findOneAndDelete({ id: req.params.id });
    if (!employee) return res.status(404).json({ message: 'Employee not found' });
    res.status(200).json({ message: 'Employee deleted successfully' });
  } catch (error) {
    res.status(500).json({ message: 'Error deleting employee', error: error.message });
  }
});

// Get employee details by ID
router.get('/api/employees/:id', async (req, res) => {
  try {
      const employee = await Employee.findOne({ id: req.params.id });
      if (!employee) {
          return res.status(404).json({ message: 'Employee not found' });
      }
      res.json(employee);
  } catch (error) {
      console.error("Error fetching employee:", error);
      res.status(500).json({ message: "Internal Server Error" });
  }
});

// Save Payroll Data and Update Employee Bank Details
router.post('/api/payroll', async (req, res) => {
  const { staffID, bankName, accountNumber, accountName, phoneNumber } = req.body;

  try {
      // Update employee's bank details
      await Employee.findOneAndUpdate(
          { id: staffID },
          {
              bankName,
              accountNumber,
              accountName,
              phoneNumber
          },
          { new: true, upsert: true } // Update or insert if not found
      );

      // Save payroll record in Payroll collection
      const newPayroll = new Payroll(req.body);
      await newPayroll.save();

      res.status(201).json({ message: 'Payroll saved successfully' });
  } catch (error) {
      console.error("Error saving payroll:", error);
      res.status(500).json({ message: "Internal server error" });
  }
});

module.exports = router;
